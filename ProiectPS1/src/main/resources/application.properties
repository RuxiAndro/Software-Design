#used to externalize configuration properties
#properties can be used to configure various aspects of your Spring application,
#   such as database connection settings, logging levels, application-specific settings


#conection string pentru db
# => host: localhost;
# => port: portul pe care e configurat SQL - 3306 default;
# => numele bazei de date (baza de date trebuie sa existe)
spring.datasource.url=jdbc:mysql://localhost:3306/Proiect_PS_BD

#username si parola din SQL
spring.datasource.username=root
spring.datasource.password=!Catelul2003

#ddl => create (ca sa se poata face tabelele)
#ddl => update (cand nu se mai modifica structura bazei de date si vrem sa pastram datele inserate in tabele
spring.jpa.hibernate.ddl-auto=update

#proprietate folosita pentru a afisa in terminal operatiile SQL executate
spring.jpa.show-sql=false

#daca e nevoie sa schimbati portul pe care ruleaza aplicatia (8080 - port default)
server.port=8080

#spring.mail.host=smtp.mail.yahoo.com
#spring.mail.host=smtp.mail.yahoo.com
#spring.mail.port=587
#spring.mail.username=ruxi.andro@yahoo.com
#spring.mail.password=zwtaifaheydtsqxi
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.starttls.enable=true

spring.mail.host=smtp.gmail.com
spring.mail.username=androruxi@gmail.com
spring.mail.password=szdrpoqvqclrirfp
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.socketFactory.port = 465
spring.mail.properties.mail.smtp.socketFactory.class = javax.net.ssl.SSLSocketFactory
